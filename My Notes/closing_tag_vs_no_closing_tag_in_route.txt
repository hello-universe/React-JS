In a tutorial i have seen that the route is written  as follows: 
<Route path='/' component={home}> </Route>

It also has a closing tag for Route. What is the difference when we use the closing tag for route or just use it as: <Route path="/" component={home} />
The difference between using a closing tag for Route and using a self-closing tag in React Router depends on the version of React Router you're using:

In React Router v5 and earlier:

Using a closing tag (<Route path="/" component={Home}> </Route>) was the standard way to render routes.
This allowed for nesting child components within the Route if needed.
However, it could lead to potential issues with nested routes and conditional rendering.
In React Router v6:

The preferred way to render routes is with the self-closing tag syntax (<Route path="/" element={<Home />} />).
This approach is more consistent with other React components and helps to avoid potential nesting problems.
It also aligns better with React's rendering model and optimizes performance.
Key points to remember:

Routes are not containers for nested components in React Router v6.
If you need to render additional components within a route, use layout components, nested routes, or other techniques.
The element prop is used to specify the component to render for a route in v6.
Here's a breakdown of the syntax in each version:

React Router v5 and earlier:

JavaScript
<Route path="/" component={Home}>
  {/* Additional content or nested routes could be placed here */}
</Route>
Use code with caution. Learn more
React Router v6:

JavaScript
<Route path="/" element={<Home />} />
Use code with caution. Learn more
In summary:

Use the self-closing tag syntax (<Route path="/" element={<Home />} />) in React Router v6 for consistency, clarity, and better performance.
If you're working with older versions of React Router (v5 or earlier), you might still encounter the closing tag syntax, but it's generally recommended to upgrade to v6 for its improvements and modern approach to routing.